// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// isTauSignificantlyChanged
bool isTauSignificantlyChanged(double tauPrecision, NumericMatrix tau, NumericMatrix prevTau);
RcppExport SEXP hergm_isTauSignificantlyChanged(SEXP tauPrecisionSEXP, SEXP tauSEXP, SEXP prevTauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tauPrecision(tauPrecisionSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prevTau(prevTauSEXP);
    rcpp_result_gen = Rcpp::wrap(isTauSignificantlyChanged(tauPrecision, tau, prevTau));
    return rcpp_result_gen;
END_RCPP
}
// easy_E_step
NumericMatrix easy_E_step(int numOfVertices, int numOfClasses, NumericVector alpha, NumericMatrix pi, NumericMatrix stat, NumericMatrix tau);
RcppExport SEXP hergm_easy_E_step(SEXP numOfVerticesSEXP, SEXP numOfClassesSEXP, SEXP alphaSEXP, SEXP piSEXP, SEXP statSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numOfVertices(numOfVerticesSEXP);
    Rcpp::traits::input_parameter< int >::type numOfClasses(numOfClassesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat(statSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(easy_E_step(numOfVertices, numOfClasses, alpha, pi, stat, tau));
    return rcpp_result_gen;
END_RCPP
}
// runFixedPointEstimationEStep
NumericMatrix runFixedPointEstimationEStep(int numOfVertices, int numOfClasses, NumericVector alpha, NumericMatrix pi, NumericMatrix stat00, NumericMatrix stat01, NumericMatrix stat10, NumericMatrix stat11, NumericMatrix tau);
RcppExport SEXP hergm_runFixedPointEstimationEStep(SEXP numOfVerticesSEXP, SEXP numOfClassesSEXP, SEXP alphaSEXP, SEXP piSEXP, SEXP stat00SEXP, SEXP stat01SEXP, SEXP stat10SEXP, SEXP stat11SEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numOfVertices(numOfVerticesSEXP);
    Rcpp::traits::input_parameter< int >::type numOfClasses(numOfClassesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat00(stat00SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat01(stat01SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat10(stat10SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat11(stat11SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(runFixedPointEstimationEStep(numOfVertices, numOfClasses, alpha, pi, stat00, stat01, stat10, stat11, tau));
    return rcpp_result_gen;
END_RCPP
}
// calculateStats
List calculateStats(NumericMatrix& network, NumericMatrix& stat00, NumericMatrix& stat01, NumericMatrix& stat10, NumericMatrix& stat11);
RcppExport SEXP hergm_calculateStats(SEXP networkSEXP, SEXP stat00SEXP, SEXP stat01SEXP, SEXP stat10SEXP, SEXP stat11SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type network(networkSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type stat00(stat00SEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type stat01(stat01SEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type stat10(stat10SEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type stat11(stat11SEXP);
    rcpp_result_gen = Rcpp::wrap(calculateStats(network, stat00, stat01, stat10, stat11));
    return rcpp_result_gen;
END_RCPP
}
// runFixedPointEstimationEStepMM
NumericMatrix runFixedPointEstimationEStepMM(int numOfVertices, int numOfClasses, NumericVector alpha, NumericMatrix pi, NumericMatrix stat00, NumericMatrix stat01, NumericMatrix stat10, NumericMatrix stat11, NumericMatrix tau, NumericMatrix& network);
RcppExport SEXP hergm_runFixedPointEstimationEStepMM(SEXP numOfVerticesSEXP, SEXP numOfClassesSEXP, SEXP alphaSEXP, SEXP piSEXP, SEXP stat00SEXP, SEXP stat01SEXP, SEXP stat10SEXP, SEXP stat11SEXP, SEXP tauSEXP, SEXP networkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numOfVertices(numOfVerticesSEXP);
    Rcpp::traits::input_parameter< int >::type numOfClasses(numOfClassesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat00(stat00SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat01(stat01SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat10(stat10SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat11(stat11SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type network(networkSEXP);
    rcpp_result_gen = Rcpp::wrap(runFixedPointEstimationEStepMM(numOfVertices, numOfClasses, alpha, pi, stat00, stat01, stat10, stat11, tau, network));
    return rcpp_result_gen;
END_RCPP
}
// runModelEstimationMStep
List runModelEstimationMStep(int numOfVertices, int numOfClasses, NumericVector alpha, NumericMatrix pi, NumericMatrix stat00, NumericMatrix stat01, NumericMatrix stat10, NumericMatrix stat11, NumericMatrix tau);
RcppExport SEXP hergm_runModelEstimationMStep(SEXP numOfVerticesSEXP, SEXP numOfClassesSEXP, SEXP alphaSEXP, SEXP piSEXP, SEXP stat00SEXP, SEXP stat01SEXP, SEXP stat10SEXP, SEXP stat11SEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numOfVertices(numOfVerticesSEXP);
    Rcpp::traits::input_parameter< int >::type numOfClasses(numOfClassesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat00(stat00SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat01(stat01SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat10(stat10SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat11(stat11SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(runModelEstimationMStep(numOfVertices, numOfClasses, alpha, pi, stat00, stat01, stat10, stat11, tau));
    return rcpp_result_gen;
END_RCPP
}
// easy_M_Step
NumericMatrix easy_M_Step(int numOfVertices, int numOfClasses, NumericVector alpha, NumericMatrix pi, NumericMatrix stat, NumericMatrix tau);
RcppExport SEXP hergm_easy_M_Step(SEXP numOfVerticesSEXP, SEXP numOfClassesSEXP, SEXP alphaSEXP, SEXP piSEXP, SEXP statSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numOfVertices(numOfVerticesSEXP);
    Rcpp::traits::input_parameter< int >::type numOfClasses(numOfClassesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stat(statSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(easy_M_Step(numOfVertices, numOfClasses, alpha, pi, stat, tau));
    return rcpp_result_gen;
END_RCPP
}

